(entry tval(qidlist grammar Secret06)(notes)(tval MAUDE-NPA(
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl #0:Msg notInI, #0:Msg notLeq(#1:Elm ; #2:Elm)=>(#0:Msg ; #3:Msg)inL .)
|(
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl #0:Msg notInI, (#0:Msg notLeq n(a,#1:Fresh)), #0:Msg notLeq(#2:Elm ;
    #3:Elm)=>(#0:Msg ; #4:Elm)inL . ;
grl #0:Msg notInI, (#0:Msg notLeq n(a,#1:Fresh)), #0:Msg notLeq(#2:Elm ;
    #3:Elm)=>(#4:Msg ; #0:Msg)inL .)
|(errorNoHeuristicApplied{
grl empty =>(#1:Msg ; #2:Msg)inL .,none,
grl empty =>(#1:Msg,#2:Msg)inL .,none,
grl empty =>(#1:Msg,#2:Msg)inL .}usingGrammar
grl empty =>(#1:Msg ; #2:Msg)inL .)
|(
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl(n(#0:Name,#1:Fresh)notLeq n(s,#2:Fresh)), n(#0:Name,#1:Fresh)notLeq n(a,
    #3:Fresh)=> n(#0:Name,#1:Fresh)inL .)
|(errorNoHeuristicApplied{
grl #50:Key notInI => pk(#50:Key,#60:Msg)inL .,none,
grl #50:Key notInI => #60:Msg inL .,none,
grl #50:Key notInI => #60:Msg inL .}usingGrammar
grl #50:Key notInI => pk(#50:Key,#60:Msg)inL .)
|(
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl #0:Msg notInI => pk(#1:Key,#0:Msg)inL .)
|(errorNoHeuristicApplied{
grl empty => pk(#1:Key,#2:Msg)inL .,none,
grl empty => #2:Msg inL .,none,
grl empty => #2:Msg inL .}usingGrammar
grl empty => pk(#1:Key,#2:Msg)inL .)
|(
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl #0:Key notInI => sk(#0:Key,#1:Msg)inL .)
|(
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl #0:Msg notInI, (#0:Msg notLeq(#1:Nonce ; s)), #0:Msg notLeq((b ; n(a,
    #2:Fresh)); s)=> sk(#3:Key,#0:Msg)inL .)
|
grl #0:Msg inL => pk(i,#0:Msg)inL . ;
grl #0:Msg inL => sk(#1:Key,#0:Msg)inL . ;
grl #0:Msg inL =>(#0:Msg ; #1:Msg)inL . ;
grl #0:Msg inL =>(#1:Msg ; #0:Msg)inL . ;
grl(sk(#0:Key,#1:Msg)notLeq sk(a,#2:Nonce ; s)), (sk(#0:Key,#1:Msg)notLeq sk(a,
    (b ; n(a,#3:Fresh)); s)), sk(#0:Key,#1:Msg)notLeq sk(i,#4:Msg)=> sk(#0:Key,
    #1:Msg)inL .))
